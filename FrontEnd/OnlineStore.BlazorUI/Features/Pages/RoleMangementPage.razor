@using BlazorBootstrap;


@using OnlineStore.BlazorUI.SampleData
@layout AdminDashboardLayout
@page "/role"
@using OnlineStore.BlazorUI.Models

<EditForm class="form" Model="@roles">
    <div class="grid-container">
        <div class="grid-x grid-padding-x">
            <div class="cell medium-12 input-box" data-name="@roles.RoleId">
                <InputText @bind-Value="roles.RoleName" typeof="text" required="required" />
                <span class="title">Enter new role</span>
            </div>
            <button><AddSvg></AddSvg></button>
        </div>
    </div>
</EditForm>

<main class="grid-container ">
    <div class="grid-x grid-padding-x">
        <div class="cell medium-12">
            <div class="table">
                <div class="table_body">
                    <table>
                        <thead>
                            <tr>
                                <th>Row</th>
                                <th>Role</th>
                                <th>Action Delete</th>
                                <th>Action Edit</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in ListRoles)
                            {
                                <tr>
                                    <td>@item.RoleId</td>
                                    <td>@item.RoleName</td>
                                    <td class="cell-del">

                                        <a href="#" class="del">
                                            <DelSvg></DelSvg>
                                            <span>Delete</span>
                                        </a>
                                    </td>
                                    <td class="cell-edit">
                                        <a @onclick="() => OpenAndShowModal(item)" class="edit">
                                            <EditSvg></EditSvg>
                                            <span>Edit</span>
                                        </a>
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                    @*    @if (showModal)
                    { *@
                    @*                         <EditForm Model="editRole" OnValidSubmit="Submit">
                            <!-- Modal content here -->
                        </EditForm> *@

                    @*  } *@
                </div>
            </div>
        </div>
    </div>
</main>
<Modal @ref="modal" Title="Modal title">
    <BodyTemplate>
        Modal body text goes here.
    </BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Secondary" @onclick="OnHideModalClick">Close</Button>
        <Button Color="ButtonColor.Primary">Save changes</Button>
    </FooterTemplate>
</Modal>

@code {


    private Modal modal = default!;

    private Roles roles = new();
    private List<Roles> ListRoles = MyRolesData.GetAllRoles();

    private EditRole editRole { get; set; } = new();
    private bool showModal = false;

    private void Submit()
    {
        // MyRolesData.Update(editRole.EditRoleId, editRole);
    }

    private void OpenModal(Roles item)
    {
        editRole.EditRoleId = item.RoleId;
        editRole.EditRoleRoleName = item.RoleName;
        showModal = true;
    }

    private async Task OpenAndShowModal(Roles item)
    {
        OpenModal(item);
        await OnShowModalClick();
    }

    private async Task OnShowModalClick()
    {
        await modal.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        await modal.HideAsync();
    }
}


@* @code {

    private Modal modal = default!;

    private async Task OnShowModalClick()
    {
        await modal.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        await modal.HideAsync();
    }







    private Roles roles = new();
    private List<Roles> ListRoles = MyRolesData.GetAllRoles();
    [SupplyParameterFromForm(FormName = "EditeRoleForm")]
    private EditRole editRole { get; set; } = new();
    private bool showModal = false;

    private void Submit()
    {
        // MyRolesData.Update(editRole.EditRoleId, editRole);
    }

    private void OpenModal(Roles item)
    {
        editRole.EditRoleId = item.RoleId;
        editRole.EditRoleRoleName = item.RoleName;
        showModal = true;
    }
}
 *@